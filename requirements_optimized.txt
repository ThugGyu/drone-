# 🚀 최적화된 DRONE 프로젝트 종속성
# 성능과 안정성을 위한 최적화된 패키지 리스트

# 기본 수치 계산 (최적화된 버전)
numpy>=1.21.0,<1.25.0          # 성능 최적화된 안정 버전
scipy>=1.9.0,<1.12.0           # 과학 계산 (필요시에만)

# 머신러닝 프레임워크 (경량화)
torch>=1.13.0,<2.1.0           # PyTorch (CUDA 지원)
stable-baselines3>=1.7.0,<2.0.0 # 강화학습 (최신 안정 버전)
gymnasium>=0.28.0,<0.30.0      # 환경 인터페이스 (OpenAI Gym 후속)

# 시각화 (필수만)
matplotlib>=3.6.0,<3.8.0       # 기본 시각화
pillow>=9.0.0,<10.1.0          # 이미지 처리

# 성능 최적화 도구
numba>=0.56.0,<0.59.0          # JIT 컴파일러 (성능 향상)
psutil>=5.9.0,<6.0.0           # 시스템 모니터링

# 개발 및 디버깅 (선택적)
tensorboard>=2.10.0,<2.15.0    # 학습 시각화
tqdm>=4.64.0,<5.0.0            # 진행률 표시

# 데이터 처리 (경량)
# pandas>=1.5.0,<2.1.0         # 데이터 분석 (필요시에만 주석 해제)

# 실험 추적 (선택적)
# wandb>=0.13.0,<0.16.0        # 실험 관리 (필요시에만 주석 해제)

# 코드 품질 도구 (개발 환경에서만)
# black>=22.0.0                # 코드 포매터
# flake8>=5.0.0                # 린터
# mypy>=0.991                  # 타입 체커

# ===== 설치 명령어 =====
# 기본 설치:
# pip install -r requirements_optimized.txt

# GPU 가속 설치 (CUDA 11.8):
# pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118

# 개발 환경 설치:
# pip install -r requirements_optimized.txt black flake8 mypy

# ===== 패키지 최적화 노트 =====
# 1. numpy: 1.24+ 버전은 일부 호환성 문제 있음
# 2. torch: CUDA 버전에 따라 설치 방법 다름
# 3. stable-baselines3: 1.7+ 버전에서 성능 개선됨
# 4. numba: JIT 컴파일로 10-100배 속도 향상
# 5. psutil: 메모리/CPU 사용량 모니터링용

# ===== 메모리 사용량 예상 =====
# 기본 패키지: ~500MB
# + PyTorch: ~1.5GB
# + 전체 설치: ~2GB 